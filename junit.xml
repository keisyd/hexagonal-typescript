<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="78" failures="0" time="5.615">
  <testsuite name="gettransaction" errors="0" failures="0" skipped="0" timestamp="2020-10-03T13:07:52" time="3.47" tests="11">
    <testcase classname="gettransaction default case" name="gettransaction default case" time="0.005">
    </testcase>
    <testcase classname="gettransaction throw error" name="gettransaction throw error" time="0.008">
    </testcase>
    <testcase classname="createtransaction default case" name="createtransaction default case" time="0.002">
    </testcase>
    <testcase classname="createtransaction throw error" name="createtransaction throw error" time="0.002">
    </testcase>
    <testcase classname="createtransaction throw error with invalid data (business validation)" name="createtransaction throw error with invalid data (business validation)" time="0.018">
    </testcase>
    <testcase classname="updatetransaction default case" name="updatetransaction default case" time="0.004">
    </testcase>
    <testcase classname="updatetransaction throw error" name="updatetransaction throw error" time="0.002">
    </testcase>
    <testcase classname="updatetransaction without id found" name="updatetransaction without id found" time="0.052">
    </testcase>
    <testcase classname="updatetransaction throw error with invalid data (business validation)" name="updatetransaction throw error with invalid data (business validation)" time="0.001">
    </testcase>
    <testcase classname="deletetransaction default case" name="deletetransaction default case" time="0.002">
    </testcase>
    <testcase classname="deletetransaction throw error" name="deletetransaction throw error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="sendMessage" errors="0" failures="0" skipped="0" timestamp="2020-10-03T13:07:52" time="3.786" tests="12">
    <testcase classname="sendMessage basic send" name="sendMessage basic send" time="0.005">
    </testcase>
    <testcase classname="sendMessage basic Send with no message Id" name="sendMessage basic Send with no message Id" time="0.002">
    </testcase>
    <testcase classname="sendMessage basic Send with throw" name="sendMessage basic Send with throw" time="0.001">
    </testcase>
    <testcase classname="sendMessage basic Send with reject response" name="sendMessage basic Send with reject response" time="0.001">
    </testcase>
    <testcase classname="receiveMessage basic call" name="receiveMessage basic call" time="0.003">
    </testcase>
    <testcase classname="receiveMessage basic call with default values" name="receiveMessage basic call with default values" time="0.001">
    </testcase>
    <testcase classname="receiveMessage basic call without body" name="receiveMessage basic call without body" time="0.001">
    </testcase>
    <testcase classname="receiveMessage basic call with reject response" name="receiveMessage basic call with reject response" time="0.006">
    </testcase>
    <testcase classname="receiveMessage basic call with no message received" name="receiveMessage basic call with no message received" time="0.002">
    </testcase>
    <testcase classname="deleteMessage basic call" name="deleteMessage basic call" time="0.002">
    </testcase>
    <testcase classname="deleteMessage reject call" name="deleteMessage reject call" time="0.002">
    </testcase>
    <testcase classname="deleteMessage throw call" name="deleteMessage throw call" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="moment timezone" errors="0" failures="0" skipped="0" timestamp="2020-10-03T13:07:55" time="0.489" tests="14">
    <testcase classname="moment timezone invalid entry" name="moment timezone invalid entry" time="0.016">
    </testcase>
    <testcase classname="moment timezone date fixed with local timezone" name="moment timezone date fixed with local timezone" time="0.005">
    </testcase>
    <testcase classname="moment timezone format date fixed with local timezone" name="moment timezone format date fixed with local timezone" time="0.001">
    </testcase>
    <testcase classname="moment timezone date fixed with UTC timezone" name="moment timezone date fixed with UTC timezone" time="0.001">
    </testcase>
    <testcase classname="moment timezone format date fixed with UTC timezone" name="moment timezone format date fixed with UTC timezone" time="0.003">
    </testcase>
    <testcase classname="moment timezone format date fixed with UTC timezone using isoString" name="moment timezone format date fixed with UTC timezone using isoString" time="0.001">
    </testcase>
    <testcase classname="moment timezone format now date with UTC timezone" name="moment timezone format now date with UTC timezone" time="0">
    </testcase>
    <testcase classname="moment timezone date now with local timezone" name="moment timezone date now with local timezone" time="0.02">
    </testcase>
    <testcase classname="moment timezone format date now with local timezone" name="moment timezone format date now with local timezone" time="0.001">
    </testcase>
    <testcase classname="moment timezone date now with local timezone and moment with entry param" name="moment timezone date now with local timezone and moment with entry param" time="0">
    </testcase>
    <testcase classname="moment timezone format date now with local timezone and moment with entry param" name="moment timezone format date now with local timezone and moment with entry param" time="0">
    </testcase>
    <testcase classname="moment timezone date now with UTC timezone" name="moment timezone date now with UTC timezone" time="0.001">
    </testcase>
    <testcase classname="isValidEntry invalid entry" name="isValidEntry invalid entry" time="0">
    </testcase>
    <testcase classname="isValidEntry valid entry" name="isValidEntry valid entry" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="basic usage" errors="0" failures="0" skipped="0" timestamp="2020-10-03T13:07:52" time="4.203" tests="2">
    <testcase classname="basic usage info" name="basic usage info" time="0.005">
    </testcase>
    <testcase classname="basic usage error" name="basic usage error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getDocument" errors="0" failures="0" skipped="0" timestamp="2020-10-03T13:07:56" time="0.598" tests="13">
    <testcase classname="getDocument default case" name="getDocument default case" time="0.004">
    </testcase>
    <testcase classname="getDocument error" name="getDocument error" time="0.003">
    </testcase>
    <testcase classname="getDocument null result.Item" name="getDocument null result.Item" time="0.001">
    </testcase>
    <testcase classname="getDocument undefined result.Item" name="getDocument undefined result.Item" time="0">
    </testcase>
    <testcase classname="putDocument default case" name="putDocument default case" time="0.001">
    </testcase>
    <testcase classname="putDocument error" name="putDocument error" time="0.002">
    </testcase>
    <testcase classname="updateDocument default case" name="updateDocument default case" time="0.001">
    </testcase>
    <testcase classname="updateDocument undefined result.Attributes" name="updateDocument undefined result.Attributes" time="0.001">
    </testcase>
    <testcase classname="updateDocument error" name="updateDocument error" time="0.002">
    </testcase>
    <testcase classname="deleteDocument default case" name="deleteDocument default case" time="0.001">
    </testcase>
    <testcase classname="deleteDocument error" name="deleteDocument error" time="0.001">
    </testcase>
    <testcase classname="remapPrevixVariables default case" name="remapPrevixVariables default case" time="0">
    </testcase>
    <testcase classname="remapPrevixVariables empty" name="remapPrevixVariables empty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CustomError" errors="0" failures="0" skipped="0" timestamp="2020-10-03T13:07:56" time="0.278" tests="5">
    <testcase classname="CustomError basic instantiate" name="CustomError basic instantiate" time="0.002">
    </testcase>
    <testcase classname="CustomError instantiate without stack" name="CustomError instantiate without stack" time="0.001">
    </testcase>
    <testcase classname="EClassError constants" name="EClassError constants" time="0">
    </testcase>
    <testcase classname="throwCustomError basic call" name="throwCustomError basic call" time="0.003">
    </testcase>
    <testcase classname="throwCustomError call from CustomError" name="throwCustomError call from CustomError" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validateCreatetransaction" errors="0" failures="0" skipped="0" timestamp="2020-10-03T13:07:56" time="0.588" tests="13">
    <testcase classname="validateCreatetransaction validate default case" name="validateCreatetransaction validate default case" time="0.002">
    </testcase>
    <testcase classname="validateCreatetransaction validate invalid taskPriority" name="validateCreatetransaction validate invalid taskPriority" time="0.013">
    </testcase>
    <testcase classname="validateCreatetransaction validate null description on create" name="validateCreatetransaction validate null description on create" time="0.001">
    </testcase>
    <testcase classname="validateCreatetransaction validate null data on create" name="validateCreatetransaction validate null data on create" time="0.001">
    </testcase>
    <testcase classname="validateCreatetransaction validate null user on create" name="validateCreatetransaction validate null user on create" time="0.003">
    </testcase>
    <testcase classname="validateUpdatetransaction validate null user on update" name="validateUpdatetransaction validate null user on update" time="0.001">
    </testcase>
    <testcase classname="validateUpdatetransaction validate null originalData on update" name="validateUpdatetransaction validate null originalData on update" time="0.001">
    </testcase>
    <testcase classname="validateUpdatetransaction validate data when is null for update" name="validateUpdatetransaction validate data when is null for update" time="0.003">
    </testcase>
    <testcase classname="validateUpdatetransaction validate data when is invalid for update" name="validateUpdatetransaction validate data when is invalid for update" time="0.001">
    </testcase>
    <testcase classname="validateUpdatetransaction validate normal update" name="validateUpdatetransaction validate normal update" time="0.001">
    </testcase>
    <testcase classname="validateDeletetransaction validate null user on delete" name="validateDeletetransaction validate null user on delete" time="0.001">
    </testcase>
    <testcase classname="validateDeletetransaction validate null originalData on update" name="validateDeletetransaction validate null originalData on update" time="0.001">
    </testcase>
    <testcase classname="validateDeletetransaction validate normal delete" name="validateDeletetransaction validate normal delete" time="0">
    </testcase>
  </testsuite>
  <testsuite name="config" errors="0" failures="0" skipped="0" timestamp="2020-10-03T13:07:56" time="0.502" tests="8">
    <testcase classname="config AWSConfig" name="config AWSConfig" time="0.003">
    </testcase>
    <testcase classname="config AWSDynamoConfig" name="config AWSDynamoConfig" time="0.013">
    </testcase>
    <testcase classname="config AWSS3Config" name="config AWSS3Config" time="0">
    </testcase>
    <testcase classname="config AWSSqsConfig" name="config AWSSqsConfig" time="0.001">
    </testcase>
    <testcase classname="config momentConfig" name="config momentConfig" time="0">
    </testcase>
    <testcase classname="config envProdName" name="config envProdName" time="0">
    </testcase>
    <testcase classname="config appConfig" name="config appConfig" time="0.002">
    </testcase>
    <testcase classname="config loggerConf" name="config loggerConf" time="0.001">
    </testcase>
  </testsuite>
</testsuites>
